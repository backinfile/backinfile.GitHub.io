class Card{constructor(frontUrl,backUrl){this.cardSize=GlobalCoor.get("cardSize"),this.cardWidth=this.cardSize[0],this.cardHeight=this.cardSize[1],this.frontUrl=frontUrl,this.backUrl=backUrl,this.animationList=[],this.curAnimation=null,this.rotateYVal=0,this.rotateZVal=0,this.scaleVal=1,this.zIndex=0,this.x=100,this.y=50,this.buildDom(),GlobalLoopCall.add(this,this.nextAnimation)}buildDom(){this.warp=$("<div>").css({perspective:"1000px",left:this.x,top:this.y,position:"absolute","border-radius":"5px","z-index":0}),this.div=$("<div>").css({width:this.cardWidth,height:this.cardHeight,"backface-visibility":"hidden",position:"relative","transform-style":"preserve-3d","background-color":"rgba(0,0,0,0)"}),this.back=$("<div>").css({"background-image":"url("+this.backUrl+")","background-size":"100% 100%",width:this.cardWidth,height:this.cardHeight,position:"absolute","border-radius":GlobalCoor.get("borderRadius"),transform:"rotateY(180deg) translateZ(1px)"}),this.front=$("<div>").css({"background-image":"url("+this.frontUrl+")","background-size":"100% 100%",width:this.cardWidth,height:this.cardHeight,position:"absolute","border-radius":GlobalCoor.get("borderRadius"),transform:"translateZ(1px)"}),this.div.append(this.front),this.div.append(this.back),this.warp.append(this.div),$("#gamebody").append(this.warp)}setBorderState(type){0==type?this.front.css("box-shadow",""):1==type?this.front.css("box-shadow","0px 0px 10px 4px green"):2==type?this.front.css("box-shadow","0px 0px 10px 4px red"):3==type?this.front.css("box-shadow","0px 0px 10px 4px black"):this.front.css("box-shadow","0px 0px 10px 4px "+type)}setZIndex(index=-1){this.warp.css("z-index",index+"")}setPos(x,y){this.warp.css("left",x-this.cardWidth/2),this.warp.css("top",y-this.cardHeight/2),this.x=x,this.y=y}fadeOut(callback){$(this.warp).fadeOut("fast",callback)}fadeIn(callback){$(this.warp).fadeIn("fast",callback)}rotateY(angle){return this.animationList.push(["rotateY",angle]),this}rotateZ(angle){return this.animationList.push(["rotateZ",angle]),this}move(ax,ay,speed=30){return this.animationList.push(["move",ax,ay,speed]),this}scale(sc=1){return this.animationList.push(["scale",sc]),this}wait(t=0){return this.animationList.push(["wait",t]),this}callback(func=null){return this.animationList.push(["callback",func]),this}nextAnimation(){var my=this;null==this.curAnimation&&this.animationList.length&&(this.curAnimation=this.animationList.shift(),this.stepAnimation())}stepAnimation(animation){var my=this;function acRotateY(angle,callback){let step=8,sign=angle>my.rotateYVal?1:-1;var inter=setInterval((function(){let curstep=Math.abs(my.rotateYVal-angle);curstep>8&&(curstep=8),my.rotateYVal+=sign*curstep,my.div.css("transform","rotateY("+my.rotateYVal+"deg) rotateZ("+my.rotateZVal+"deg) scale("+my.scaleVal+")"),curstep<8&&(clearInterval(inter),my.rotateYVal=angle,setTimeout(callback,0))}),1e3/60)}function acRotateZ(angle,callback){let step=8,sign=angle>my.rotateZVal?1:-1;var inter=setInterval((function(){let curstep=Math.abs(my.rotateZVal-angle);curstep>8&&(curstep=8),my.rotateZVal+=sign*curstep,my.div.css("transform","rotateY("+my.rotateYVal+"deg) rotateZ("+my.rotateZVal+"deg) scale("+my.scaleVal+")"),curstep<8&&(clearInterval(inter),my.rotateZVal=angle,setTimeout(callback,0))}),1e3/60)}function acScale(sc,callback){let step=.05,sign=sc>my.scaleVal?1:-1;var inter=setInterval((function(){let curstep=Math.abs(my.scaleVal-sc);curstep>.05&&(curstep=.05),my.scaleVal+=sign*curstep,my.div.css("transform","rotateY("+my.rotateYVal+"deg) rotateZ("+my.rotateZVal+"deg) scale("+my.scaleVal+")"),curstep<.05&&(clearInterval(inter),my.scaleVal=sc,setTimeout(callback,0))}),1e3/60)}function acMove(ax,ay,speed,callback){my.setZIndex(999+my.zIndex),my.warp.animate({left:ax-my.cardWidth/2,top:ay-my.cardHeight/2},"fast","swing",(function(){my.setZIndex(my.zIndex),my.setPos(ax,ay),setTimeout(callback,0)}))}function animationEnd(){my.curAnimation=null}"rotateY"==(animation=my.curAnimation)[0]?acRotateY(animation[1],animationEnd):"rotateZ"==animation[0]?acRotateZ(animation[1],animationEnd):"move"==animation[0]?acMove(animation[1],animation[2],animation[3],animationEnd):"scale"==animation[0]?acScale(animation[1],animationEnd):"wait"==animation[0]?setTimeout((function(){animationEnd()}),animation[1]||0):"callback"==animation[0]?(animation[1]&&animation[1](),animationEnd()):animationEnd()}setClickState(click=!1,callback=null){this.warp.off("click"),click&&callback&&this.warp.on("click",callback),click?this.warp.css("cursor","pointer"):this.warp.css("cursor","default")}setDragState(drag=!1,dragStart=null,dragEnd=null){var my=this;drag?(this.setDragState(!1),this.isDragable=!0,my.warp.css("cursor","grab"),my.warp.mousedown((function(event){let ori_x=my.x,ori_y=my.y,m_x=event.clientX,m_y=event.clientY;my.warp.css("cursor","grabbing"),$(document).mousemove((function(event){let n_x=event.clientX,n_y=event.clientY;my.setPos(n_x-m_x+ori_x,n_y-m_y+ori_y)})),$(my.warp).mouseup((function(){$(document).off("mousemove"),my.warp.off("mousemove mouseup"),my.warp.css("cursor","grab"),dragEnd&&dragEnd()})),dragStart&&dragStart()}))):(this.isDragable=!1,this.warp.off("mousemove mouseup mousedown"),this.warp.css("cursor","default"),$(document).off("mousemove"))}destroy(){this.div.off("mouseout mouseover"),this.warp.off("click mousemove mouseup mousedown"),this.warp.remove()}}